When would you want to create a remote repository rather than keeping all your work local?

-collaborate with others
-keep a backup of your code online
-working on multiple machines, for example a mobile device and a computer


Why might you want to always pull changes manually rather than having Git automatically stay up-to-date with your remote repository?

-sometimes changes require multiple commits but are only publishable once completed
--> work localy and then push on GitHub
-pulling manually is important so that your treestructure is not accidentally altered by contributors working on the same


Describe the differences between forks, clones, and branches. When would you use one instead of another?

-forks are clones from GitHub to Github without dependency, aka not transmitting changes (but mentioning the author)
-clone can be from Github to local or from local to local
-branch is within one repository


What is the benefit of having a copy of the last known state of the remote stored locally?

-you can continue working a little longer in a time that you don't have access to your remote
-for example on a plane


How would you collaborate without using Git or GitHub? What would be easier, and what would be harder?

-maybe through mail -->tedious!
-or through google drive -->hard to merge files and easily navigate


When would you want to make changes in a separate branch rather than directly in master? What benefits does each approach have?

If you were working alone on a more or less linear proyect it would be sufficient to work in master branch.
But if you are collaborating in a public proyect it is better practice to work on a branch.
That way you can always pull changes into your local master branch, merging the changes locally, pushing your
branch to origin/branchS and then sending a pull-request to merge them to origin/master